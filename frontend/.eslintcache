[{"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/index.js":"1","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/reportWebVitals.js":"2","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/store.js":"3","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/App.js":"4","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/login.js":"5","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/chat/chatScreen.js":"6","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/callbacks/zoomCallback.js":"7","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/index.js":"8","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/UserList.js":"9","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ErrorModal.js":"10","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/LoadingModal.js":"11","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/NavBar.js":"12","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ChatBox.js":"13","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/contacts.js":"14"},{"size":576,"mtime":1609663631610,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1608198201423,"results":"17","hashOfConfig":"16"},{"size":117,"mtime":1609663631694,"results":"18","hashOfConfig":"16"},{"size":711,"mtime":1609663631494,"results":"19","hashOfConfig":"16"},{"size":2558,"mtime":1610096974242,"results":"20","hashOfConfig":"16"},{"size":6816,"mtime":1610341004627,"results":"21","hashOfConfig":"16"},{"size":3012,"mtime":1610097022149,"results":"22","hashOfConfig":"16"},{"size":123,"mtime":1609663631646,"results":"23","hashOfConfig":"16"},{"size":2484,"mtime":1609743745030,"results":"24","hashOfConfig":"16"},{"size":566,"mtime":1608198200971,"results":"25","hashOfConfig":"16"},{"size":436,"mtime":1608198201055,"results":"26","hashOfConfig":"16"},{"size":716,"mtime":1610096547530,"results":"27","hashOfConfig":"16"},{"size":3237,"mtime":1609755415815,"results":"28","hashOfConfig":"16"},{"size":0,"mtime":1609663631618,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"10xl0fr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/index.js",["66","67"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["68","69"],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/reportWebVitals.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/store.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/App.js",["70","71"],"import \"./App.css\";\nimport React, { Component } from \"react\";\nimport \"react-chat-elements/dist/main.css\";\nimport \"./index.css\";\nimport auth from './components/auth/login';\nimport chat from './components/chat/chatScreen';\nimport zoomCallback from './components/callbacks/zoomCallback'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={auth} />  \n        <Route exact path=\"/chat\" component={chat} />\n        <Route exact path=\"/zoom_oauth_callback\" component={zoomCallback} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/login.js",["72","73"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass login extends Component {\n  state = {\n    tokendata: \"\",\n    userdata: {},\n  };\n\n  authenticate() {\n    var url =\n      \"https://zoom.us/oauth/authorize?response_type=code&client_id=\" +\n      process.env.REACT_APP_clientID +\n      \"&redirect_uri=\" +\n      process.env.REACT_APP_redirectURL +\n      \"/zoom_oauth_callback\";\n    window.location = url;\n  }\n\n  checkLoginStatus = () => {\n    console.log(\"TOKEN STATE\", this.state.tokendata);\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/user\", {\n        headers: {\n          atoken: this.state.tokendata,\n        },\n      })\n      .then((result) => {\n        if (result.data.code == 124) {\n          localStorage.clear();\n          this.authenticate();\n        } else {\n          this.setState({ userdata: result.data });\n        }\n        console.log(result.data);\n        // code: 124, message: \"Invalid access token.\"\n      })\n      .catch((error) => {\n        console.log(error);\n        localStorage.clear();\n        window.location.reload();\n      });\n  };\n\n  componentDidMount() {\n    const tokens = localStorage.getItem(\"AccessToken\");\n    if (tokens != null) {\n      console.log(\"LOCAL_Login\", localStorage.getItem(\"AccessToken\"));\n      console.log(\"Tokens\", tokens);\n      this.setState({ tokendata: tokens }, () => {\n        this.checkLoginStatus();\n      });\n    } else {\n      this.authenticate();\n    }\n  }\n  render() {\n    return (\n      <div \n        style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n        {this.state.userdata.first_name ? (\n          <div>\n            <div class=\"container\">\n              <div>\n                <div>\n                  <h1>Hello</h1>\n                  <h2>\n                    {this.state.userdata.first_name.toString()}{\" \"}\n                    {this.state.userdata.last_name.toString()}\n                  </h2>\n                </div>\n              </div>\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  aboutProps: {\n                    userdata: this.state.userdata,\n                    tokendata: this.state.tokendata,\n                  },\n                }}\n                className=\"btn btn-primary\"\n              >\n                Go to chat\n              </Link>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1>LOGIN</h1>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default login;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/chat/chatScreen.js",["74","75","76","77","78","79","80","81","82"],"import React, { Component } from \"react\";\nimport NavBar from \"../NavBar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport UserList from \"../UserList\";\nimport ChatBox from \"../ChatBox\";\nimport ErrorModal from \"../ErrorModal\";\nimport LoadingModal from \"../LoadingModal\";\nimport \"react-chat-elements/dist/main.css\";\n// import { fetchUsers } from \"./requests\";\nimport Loader from \"react-loader-spinner\";\n\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport axios from \"axios\";\n\nclass chatScreen extends Component {\n  state = {\n    signInModalShow: false,\n    userChatData: {}, // this contains users from which signed-in user can chat and its message data.\n    user: {}, // Signed-In User\n    tokenData: {},\n    messages: [],\n    selectedUserIndex: null,\n    showChatBox: false, // For small devices only\n    showChatList: true, // For small devices only\n    error: false,\n    errorMessage: \"\",\n  };\n  fetchContacts() {\n    // console.log(this.state.tokenData);\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/contacts\", {\n        headers: {\n          atoken: this.state.tokenData,\n        },\n      })\n      .then((result) => {\n        this.setState({ userChatData: result.data });\n        // console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  checkLoginStatus = () => {\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/user\", {\n        headers: {\n          atoken: this.state.tokenData,\n        },\n      })\n      .then((result) => {\n        if (result.data.code == 124) {\n          console.log(\"error\");\n          localStorage.clear();\n          var url = process.env.REACT_APP_redirectURL + \"/\";\n          window.location = url;\n        } else {\n          this.setState({ user: result.data });\n          // this.setState({ user: this.props.location.aboutProps.userdata });\n          this.fetchContacts();\n        }\n        console.log(result.data);\n        // code: 124, message: \"Invalid access token.\"\n      })\n      .catch((error) => {\n        console.log(error);\n        localStorage.clear();\n        var url = process.env.REACT_APP_redirectURL + \"/\";\n        window.location = url;\n      });\n  };\n\n  componentDidMount() {\n    // console.log(localStorage.getItem(\"AccessToken\"));\n    const tokens = localStorage.getItem(\"AccessToken\");\n    if (tokens != null) {\n      // console.log(\"CHAT_Login\", localStorage.getItem(\"AccessToken\"));\n      // console.log(\"Tokens\", tokens);\n      this.setState({ tokenData: tokens }, () => {\n        this.checkLoginStatus();\n      });\n    } else {\n      localStorage.clear();\n      var url = process.env.REACT_APP_redirectURL + \"/\";\n      window.location = url;\n    }\n  }\n  myMsgs(msg) {\n    if (msg.sender == this.sender) {\n      msg.position = \"right\";\n    } else {\n      msg.position = \"left\";\n    }\n    msg.type = \"text\";\n    msg.date = msg.timestamp;\n    msg.text = msg.message;\n    return msg;\n  }\n\n  getMessages = () => {\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/messages\", {\n        headers: {\n          atoken: this.state.tokenData,\n          id: this.state.user.id,\n          to: this.state.selectedUserIndex.user.email,\n          dt: \"2021-01-11\",\n        },\n      })\n      .then((result) => {\n        var sender = this.state.user.email;\n        var msgs = result.data.messages.map(this.myMsgs, {\n          sender: sender,\n        });\n        msgs = msgs.reverse();\n        this.setState({ messages: msgs });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  getMessagesInterval = () => {\n    const interval = setInterval(() => {\n      this.getMessages();\n    }, 4000);\n  };\n  onChatClicked(e) {\n    this.toggleViews();\n    // console.log(\"Selected User\", e);\n    let users = this.state.userChatData.contacts;\n    this.setState({ selectedUserIndex: e }, () => {\n      this.getMessagesInterval();\n    });\n    return;\n  }\n  sendMessage(message) {\n    console.log(\"To\", message.to);\n    var data = {\n      message: message.text,\n      to: message.to,\n    };\n    axios\n      .post(\"http://localhost:3000\" + \"/zoom/sendmessage\", data, {\n        headers: {\n          atoken: this.state.tokenData,\n          id: this.state.user.id,\n        },\n      })\n      .then((result) => {\n        console.log(\"Send\", result);\n        this.getMessages();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  createMessage(text) {\n    let message = {\n      type: \"text\",\n      text: text,\n      date: +new Date(),\n      className: \"message\",\n      position: \"right\",\n      to: this.state.selectedUserIndex.user.email,\n    };\n    this.sendMessage(message);\n  }\n  toggleViews() {\n    this.setState({\n      showChatBox: !this.state.showChatBox,\n      showChatList: !this.state.showChatList,\n    });\n  }\n  render() {\n    let chatBoxProps = this.state.showChatBox\n      ? {\n          xs: 12,\n          sm: 12,\n        }\n      : {\n          xsHidden: true,\n          // smHidden: true,\n        };\n\n    let chatListProps = this.state.showChatList\n      ? {\n          xs: 12,\n          sm: 12,\n        }\n      : {\n          xsHidden: true,\n          // smHidden: true,\n        };\n    return (\n      <div>\n        {this.state.userChatData.contacts ? (\n          <div>\n            <NavBar signedInUser={this.state.user} />\n            <Container>\n              <Row>\n                <Col {...chatListProps} md={4}>\n                  <UserList\n                    userData={this.state.userChatData}\n                    onChatClicked={this.onChatClicked.bind(this)}\n                  />\n                </Col>\n                <Col {...chatBoxProps} md={8}>\n                  <ChatBox\n                    signedInUser={this.state.user}\n                    messages={this.state.messages}\n                    onSendClicked={this.createMessage.bind(this)}\n                    onBackPressed={this.toggleViews.bind(this)}\n                    targetUser={this.state.selectedUserIndex}\n                  />\n                </Col>\n              </Row>\n            </Container>\n            <ErrorModal\n              show={this.state.error}\n              errorMessage={this.state.errorMessage}\n            />\n            <LoadingModal show={this.state.loading} />\n            <NotificationContainer />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default chatScreen;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/callbacks/zoomCallback.js",["83","84"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nclass zoomCallback extends Component {\n  state = {\n    tokendata: {},\n    userdata: {},\n  };\n\n  authenticate() {\n    const value = queryString.parse(this.props.location.search);\n    console.log(\"Yo working\");\n    // console.log(\n    //   Buffer.from(\n    //     `${process.env.REACT_APP_clientID}:${process.env.REACT_APP_clientSecret}`\n    //   ).toString(\"base64\")\n    // );\n    if (value.code) {\n      // replace with server URI\n      axios\n        .get(\"http://localhost:3000\" + \"/zoom/auth\", {\n          headers: {\n            authData: value.code.toString(),\n          },\n        })\n        .then((res) => {\n          this.setState({ tokendata: res });\n          localStorage.setItem(\n            \"AccessToken\",\n            this.state.tokendata.data.access_token\n          );\n          console.log(\"LOCAL_Callback\", localStorage.getItem(\"AccessToken\"));\n          axios\n            .get(\"http://localhost:3000\" + \"/zoom/user\", {\n              headers: {\n                atoken: this.state.tokendata.data.access_token,\n              },\n            })\n            .then((result) => {\n              this.setState({ userdata: result.data });\n              // console.log(result.data);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      console.log(\"fiss\");\n    }\n  }\n\n  componentDidMount() {\n    this.authenticate();\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {this.state.userdata.first_name ? (\n          <div>\n            <div>\n              <div>\n                <div>\n                  <h1>Hello</h1>\n                  <h2>\n                    {this.state.userdata.first_name.toString()}{\" \"}\n                    {this.state.userdata.last_name.toString()}\n                  </h2>\n                </div>\n              </div>\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  aboutProps: {\n                    userdata: this.state.userdata,\n                    tokendata: this.state.tokendata,\n                  },\n                }}\n                className=\"btn btn-primary\"\n              >\n                Go to chat\n              </Link>\n            </div>\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default zoomCallback;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/index.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/UserList.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ErrorModal.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/LoadingModal.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/NavBar.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ChatBox.js",["85"],"import React, { Component } from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n// import Col from \"react-bootstrap/lib/Col\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport {\n  MessageList,\n  Navbar as NavbarComponent,\n  Avatar,\n} from \"react-chat-elements\";\nimport axios from \"axios\";\n\n/**\n *\n * ChatBox Component\n *\n * displays all the messages from chat history.\n * renders message text box for input.\n */\n\nexport default class ChatBox extends Component {\n  state = {\n    messageText: \"\",\n    messages: {},\n    tokenData: {},\n  };\n  /**\n   *\n   * Sends a message only if it is not falsy.\n   */\n\n  onSendClicked() {\n    if (!this.state.messageText) {\n      return;\n    }\n    this.props.onSendClicked(this.state.messageText);\n    this.setState({ messageText: \"\" });\n  }\n  onMessageInputChange(e) {\n    this.setState({ messageText: e.target.value });\n  }\n  /**\n   *\n   * @param {KeyboardEvent} e\n   *\n   * listen for enter pressed and sends the message.\n   */\n  onMessageKeyPress(e) {\n    if (e.key === \"Enter\") {\n      this.onSendClicked();\n    }\n  }\n\n  render() {\n    // console.log(\"Target\",this.props.targetUser);\n    return (\n      <div>\n        {this.props.targetUser ? (\n          <div>\n            <NavbarComponent\n              left={\n                <div>\n                  <Avatar\n                    src={`../static/images/avatar/${this.props.targetUser.id}.jpg`}\n                    alt={\"image\"}\n                    size=\"large\"\n                    type=\"circle flexible\"\n                  />\n                  <p className=\"navBarText\">\n                    {this.props.targetUser.user.first_name}\n                  </p>\n                </div>\n              }\n            />\n            <MessageList\n              className=\"message-list\"\n              lockable={true}\n              toBottomHeight={\"100%\"}\n              dataSource={this.props.messages}\n            />\n            <FormGroup>\n              <InputGroup>\n                <FormControl\n                  type=\"text\"\n                  value={this.state.messageText}\n                  onChange={this.onMessageInputChange.bind(this)}\n                  onKeyPress={this.onMessageKeyPress.bind(this)}\n                  placeholder=\"Type a message here (Limit 3000 characters)...\"\n                  ref=\"messageTextBox\"\n                  className=\"messageTextBox\"\n                  maxLength=\"3000\"\n                  autoFocus\n                />\n                <Button>\n                  <Button\n                    disabled={!this.state.messageText}\n                    className=\"sendButton\"\n                    onClick={this.onSendClicked.bind(this)}\n                  >\n                    Send\n                  </Button>\n                </Button>\n              </InputGroup>\n            </FormGroup>\n          </div>\n        ) : (\n          <div>\n            <Jumbotron>\n              <h1>Hello, {(this.props.signedInUser || {}).first_name}!</h1>\n              <p>Select a contact to start a chat.</p>\n            </Jumbotron>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/contacts.js",[],["86","87"],{"ruleId":"88","severity":1,"message":"89","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":13},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"88","severity":1,"message":"97","line":8,"column":35,"nodeType":"90","messageId":"91","endLine":8,"endColumn":41},{"ruleId":"88","severity":1,"message":"98","line":8,"column":50,"nodeType":"90","messageId":"91","endLine":8,"endColumn":54},{"ruleId":"99","severity":1,"message":"100","line":24,"column":36,"nodeType":"101","messageId":"102","endLine":24,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":30,"column":30,"nodeType":"101","messageId":"105","endLine":30,"endColumn":32},{"ruleId":"88","severity":1,"message":"106","line":16,"column":3,"nodeType":"90","messageId":"91","endLine":16,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":37,"column":36,"nodeType":"101","messageId":"102","endLine":37,"endColumn":37},{"ruleId":"99","severity":1,"message":"100","line":52,"column":36,"nodeType":"101","messageId":"102","endLine":52,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":58,"column":30,"nodeType":"101","messageId":"105","endLine":58,"endColumn":32},{"ruleId":"103","severity":1,"message":"104","line":95,"column":20,"nodeType":"101","messageId":"105","endLine":95,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":108,"column":36,"nodeType":"101","messageId":"102","endLine":108,"endColumn":37},{"ruleId":"88","severity":1,"message":"107","line":129,"column":11,"nodeType":"90","messageId":"91","endLine":129,"endColumn":19},{"ruleId":"88","severity":1,"message":"108","line":136,"column":9,"nodeType":"90","messageId":"91","endLine":136,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":149,"column":37,"nodeType":"101","messageId":"102","endLine":149,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":24,"column":38,"nodeType":"101","messageId":"102","endLine":24,"endColumn":39},{"ruleId":"99","severity":1,"message":"100","line":37,"column":42,"nodeType":"101","messageId":"102","endLine":37,"endColumn":43},{"ruleId":"88","severity":1,"message":"109","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":13},{"ruleId":"93","replacedBy":"110"},{"ruleId":"95","replacedBy":"111"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'Switch' is defined but never used.","'Link' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'NotificationManager' is defined but never used.","'interval' is assigned a value but never used.","'users' is assigned a value but never used.","'axios' is defined but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]