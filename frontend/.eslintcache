[{"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/index.js":"1","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/reportWebVitals.js":"2","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/App.js":"3","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/store.js":"4","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/login.js":"5","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/teamsLogin.js":"6","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/mainLogin.js":"7","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/callbacks/slackCallback.js":"8","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/callbacks/zoomCallback.js":"9","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/slackLogin.js":"10","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/chat/chatScreen.js":"11","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/index.js":"12","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/config/teamsConfig.js":"13","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/config/slackConfig.js":"14","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/apis/teams/ErrorMessage.js":"15","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/NavBar.js":"16","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/apis/teams/MSUtils.js":"17","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/UserList.js":"18","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ErrorModal.js":"19","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/LoadingModal.js":"20","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ChatBox.js":"21","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/AddUser.js":"22","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/contacts.js":"23","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/apis/teams/GraphService.js":"24"},{"size":576,"mtime":1615198230234,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1615198230234,"results":"27","hashOfConfig":"26"},{"size":1149,"mtime":1615199105598,"results":"28","hashOfConfig":"26"},{"size":117,"mtime":1615198230234,"results":"29","hashOfConfig":"26"},{"size":2736,"mtime":1615712043811,"results":"30","hashOfConfig":"26"},{"size":2761,"mtime":1615198230234,"results":"31","hashOfConfig":"26"},{"size":4003,"mtime":1616057221521,"results":"32","hashOfConfig":"26"},{"size":2790,"mtime":1615713387021,"results":"33","hashOfConfig":"26"},{"size":2968,"mtime":1615287328278,"results":"34","hashOfConfig":"26"},{"size":2097,"mtime":1615713380329,"results":"35","hashOfConfig":"26"},{"size":15678,"mtime":1616049212445,"results":"36","hashOfConfig":"26"},{"size":123,"mtime":1615198230234,"results":"37","hashOfConfig":"26"},{"size":177,"mtime":1615198230234,"results":"38","hashOfConfig":"26"},{"size":147,"mtime":1616062533144,"results":"39","hashOfConfig":"26"},{"size":489,"mtime":1615198230234,"results":"40","hashOfConfig":"26"},{"size":895,"mtime":1615916526599,"results":"41","hashOfConfig":"26"},{"size":1824,"mtime":1615198230234,"results":"42","hashOfConfig":"26"},{"size":2993,"mtime":1615735966830,"results":"43","hashOfConfig":"26"},{"size":566,"mtime":1615198230234,"results":"44","hashOfConfig":"26"},{"size":436,"mtime":1615198230234,"results":"45","hashOfConfig":"26"},{"size":5117,"mtime":1616057611849,"results":"46","hashOfConfig":"26"},{"size":3611,"mtime":1615541863449,"results":"47","hashOfConfig":"26"},{"size":0,"mtime":1615198230234,"results":"48","hashOfConfig":"26"},{"size":451,"mtime":1615198230234,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"10xl0fr",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/index.js",["112","113"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["114","115"],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/reportWebVitals.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/App.js",["116","117","118"],"import \"./App.css\";\nimport React, { Component } from \"react\";\nimport \"react-chat-elements/dist/main.css\";\nimport \"./index.css\";\nimport auth from './components/auth/login';\nimport chat from './components/chat/chatScreen';\nimport zoomCallback from './components/callbacks/zoomCallback'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport teamsLogin from './components/auth/teamsLogin';\nimport slackLogin from './components/auth/slackLogin';\nimport slackCallback from \"./components/callbacks/slackCallback\";\nimport mainLogin from './components/auth/mainLogin';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={mainLogin} />  \n        <Route exact path=\"/slackAuth\" component={slackLogin} />\n        <Route exact path=\"/zoomAuth\" component={auth} />  \n        <Route exact path=\"/chat\" component={chat} />\n        <Route exact path=\"/zoom_oauth_callback\" component={zoomCallback} />\n        <Route exact path=\"/slack_oauth_callback\" component={slackCallback} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/store.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/login.js",["119","120","121"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass login extends Component {\n  state = {\n    tokendata: \"\",\n    userdata: {},\n  };\n\n  authenticate() {\n    var url =\n      \"https://zoom.us/oauth/authorize?response_type=code&client_id=\" +\n      process.env.REACT_APP_clientID +\n      \"&redirect_uri=\" +\n      process.env.REACT_APP_redirectURL +\n      \"/zoom_oauth_callback\";\n    window.location = url;\n  }\n\n  checkLoginStatus = () => {\n    console.log(\"TOKEN STATE \", this.state.tokendata);\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/user\", {\n        headers: {\n          atoken: this.state.tokendata,\n        },\n      })\n      .then((result) => {\n        if (result.data.code == 124) {\n          localStorage.clear();\n          this.authenticate();\n        } else {\n          this.setState({ userdata: result.data });\n          var url = process.env.REACT_APP_redirectURL + \"/\";\n          window.location = url;\n        }\n        console.log(result.data);\n        // code: 124, message: \"Invalid access token.\"\n      })\n      .catch((error) => {\n        console.log(error);\n        localStorage.clear();\n        window.location.reload();\n      });\n  };\n\n  componentDidMount() {\n    const tokens = localStorage.getItem(\"ZoomAccessToken\");\n    if (tokens != null) {\n      console.log(\"LOCAL_Login\", localStorage.getItem(\"ZoomAccessToken\"));\n      console.log(\"Tokens\", tokens);\n      this.setState({ tokendata: tokens }, () => {\n        this.checkLoginStatus();\n      });\n    } else {\n      this.authenticate();\n    }\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {this.state.userdata.first_name ? (\n          <div>\n            {/* <div class=\"container\">\n              <div>\n                <div>\n                  <h1>Hello</h1>\n                  <h2>\n                    {this.state.userdata.first_name.toString()}{\" \"}\n                    {this.state.userdata.last_name.toString()}\n                  </h2>\n                </div>\n              </div>\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  aboutProps: {\n                    userdata: this.state.userdata,\n                    tokendata: this.state.tokendata,\n                  },\n                }}\n                className=\"btn btn-primary\"\n              >\n                Go to chat\n              </Link>\n            </div> */}\n          </div>\n        ) : (\n          <div>\n            <h1>LOGGING YOU IN</h1>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default login;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/teamsLogin.js",["122","123","124","125","126","127","128","129","130","131","132"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, NavLink as RouterNavLink } from 'react-router-dom';\nimport {\n  Button,\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Jumbotron\n} from 'reactstrap';\nimport { UserAgentApplication } from 'msal';\n// import '@fortawesome/fontawesome-free/css/all.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport { config } from '../config/teamsConfig';\nimport ErrorMessage from '../apis/teams/ErrorMessage';\nimport { normalizeError, getUserProfile } from '../apis/teams/MSUtils';\n\nclass teamsLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      error: null,\n      isAuthenticated: false,\n      user: {}\n    };\n\n    this.userAgentApplication = new UserAgentApplication({\n      auth: {\n        clientId: config.clientId,\n        redirectUri: config.redirectUri\n      },\n      cache: {\n        cacheLocation: \"sessionStorage\",\n        storeAuthStateInCookie: true\n      }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  async login() {\n    try {\n      await this.userAgentApplication.loginPopup(\n        {\n          scopes: config.scopes,\n          prompt: \"select_account\"\n        });\n      const user = await getUserProfile(this.userAgentApplication, config.scopes);\n      console.log(user);\n      this.setState({\n        isAuthenticated: true,\n        user: {\n          displayName: user.displayName,\n          email: user.mail || user.userPrincipalName\n        },\n        error: null\n      });\n      console.log(user);\n    }\n    catch (err) {\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: normalizeError(err)\n      });\n    }\n  }\n\n  logout() {\n    this.userAgentApplication.logout();\n  }\n\n  render() {\n    let error = null;\n    if (this.state.error) {\n      error = <ErrorMessage\n        message={this.state.error.message}\n        debug={this.state.error.debug} />;\n    }\n    return (\n      <Router>\n        <div>\n          <Container>\n            {error}\n            <Route exact path=\"/\"\n              render={() =>\n                <Jumbotron>\n                  {this.state.isAuthenticated\n                    ? <div>\n                      <h4>Welcome {this.state.user.displayName}!</h4>\n                    </div>\n                    : <Button color=\"primary\" onClick={() => this.login()}>Click here to sign in</Button>\n                  }\n                </Jumbotron>\n              } />\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default teamsLogin;","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/mainLogin.js",["133","134","135","136","137"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass mainLogin extends Component {\n  state = {\n    zoomLoginFlag: false,\n    slackLoginFlag: false,\n    zoomtokenData: null,\n    slacktokenData: null,\n  };\n\n  checkZoomLoginStatus = () => {\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/user\", {\n        headers: {\n          atoken: this.state.zoomtokenData,\n        },\n      })\n      .then((result) => {\n        if (result.data.code == 124) {\n          this.setState({ zoomLoginFlag: false });\n        } else {\n          this.setState({ zoomLoginFlag: true });\n        }\n        console.log(\"AA\", result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ zoomLoginFlag: false });\n      });\n  };\n\n  checkSlackLoginStatus = () => {\n    let usrid = localStorage.getItem(\"SlackUserID\");\n    axios\n      .get(\"http://localhost:3000\" + \"/slack/me\", {\n        headers: {\n          atoken: this.state.slacktokenData,\n          uid: usrid,\n        },\n      })\n      .then((result) => {\n        if (result.data.ok == \"false\") {\n          console.log(\"error\");\n          this.setState({ slackLoginFlag: false });\n        } else {\n          this.setState({ slackLoginFlag: true });\n        }\n        console.log(result.data);\n        // code: 124, message: \"Invalid access token.\"\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ slackLoginFlag: false });\n      });\n  };\n\n  componentDidMount() {\n    const zoomTokens = localStorage.getItem(\"ZoomAccessToken\");\n    const slackTokens = localStorage.getItem(\"SlackAccessToken\");\n    if (zoomTokens != null) {\n      this.setState({ zoomtokenData: zoomTokens }, () => {\n        this.checkZoomLoginStatus();\n      });\n    } else if (zoomTokens == null) {\n      this.setState({ zoomLoginFlag: false });\n    }\n    if (slackTokens != null) {\n      this.setState({ slacktokenData: slackTokens }, () => {\n        this.checkSlackLoginStatus();\n      });\n    } else if (slackTokens == null) {\n      this.setState({ slackLoginFlag: false });\n    }\n  }\n  render() {\n    console.log(this.state.zoomLoginFlag);\n    console.log(this.state.slackLoginFlag);\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {this.state.slackLoginFlag && this.state.zoomLoginFlag ? (\n          // <Link\n          //   to={{\n          //     pathname: \"/chat\",\n          //   }}\n          //   className=\"btn btn-primary\"\n          // >\n          //   Logged In! Go To Chat\n          // </Link>\n          <Button\n            href=\"/chat\"\n            size=\"lg\"\n            style={{ margin: \"15px\", height: \"80px\", width:\"300px\",padding:'25px', fontSize:'20px', fontWeight:'bold' }}\n            active\n            variant=\"success\"\n          >\n            Logged In! Go To Chat\n          </Button>\n        ) : (\n          <div>\n            {this.state.zoomLoginFlag && !this.state.slackLoginFlag ? (\n              <h1 style={{ margin: \"10px\" }}>Logged Into Zoom</h1>\n            ) : (\n              <div>\n                <Button href=\"/zoomAuth\" size=\"lg\" style={{ margin: \"20px\", height: \"80px\", width:\"200px\",padding:'25px', fontSize:'20px', fontWeight:'bold'}}>\n                  Zoom Login\n                </Button>\n              </div>\n            )}\n            {this.state.slackLoginFlag && !this.state.zoomLoginFlag ? (\n              <h1 style={{ margin: \"10px\" }}>Logged Into Slack</h1>\n            ) : (\n              <div>\n                <Button href=\"/slackAuth\" size=\"lg\" style={{ margin: \"20px\", height: \"80px\", width:\"200px\",padding:'25px', fontSize:'20px', fontWeight:'bold' }}>\n                  Slack Login\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default mainLogin;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/callbacks/slackCallback.js",["138","139","140","141"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { Link } from \"react-router-dom\";\nimport { config } from \"../config/slackConfig\";\n\nclass slackCallback extends Component {\n  state = {\n    tokendata: {},\n    userdata: {},\n  };\n\n  authenticate() {\n    const value = queryString.parse(this.props.location.search);\n    console.log(value.code);\n    if (value.code) {\n      // replace with server URI\n      axios\n        .get(\"http://localhost:3000\" + \"/slack/auth\", {\n          headers: {\n            authcode: value.code.toString(),\n          },\n        })\n        .then((res) => {\n          console.log(res);\n          this.setState({ tokendata: res });\n          localStorage.setItem(\n            \"SlackAccessToken\",\n            this.state.tokendata.data.access_token\n          );\n          localStorage.setItem(\n            \"SlackUserID\",\n            this.state.tokendata.data.user_id\n          );\n          console.log(this.state.tokendata.data.user_id);\n          //console.log(\"LOCAL_Callback\", localStorage.getItem(\"ZoomAccessToken\"));\n          axios\n            .get(\"http://localhost:3000\" + \"/slack/me\", {\n              headers: {\n                atoken: this.state.tokendata.data.access_token,\n                uid: this.state.tokendata.data.user_id,\n              },\n            })\n            .then((result) => {\n              this.setState({ userdata: result.data.user });\n              console.log(result.data.user);\n              var url = process.env.REACT_APP_redirectURL + \"/\";\n              window.location = url;\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      console.log(\"fiss\");\n    }\n  }\n\n  componentDidMount() {\n    this.authenticate();\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {this.state.userdata.real_name ? (\n          <div>\n            {/* <div>\n              <div>\n                <div>\n                  <h1>Hello</h1>\n                  <h2>\n                    {this.state.userdata.real_name.toString()}{\" \"}\n                  </h2>\n                </div>\n              </div>\n              <Link to={{pathname :\"/chat\" ,aboutProps:{slackuserdata:this.state.userdata, slacktokendata : this.state.tokendata}}} className=\"btn btn-primary\">\n                Go to chat\n              </Link>\n            </div> */}\n          </div>\n        ) : (\n          <div>\n            <h1>LOGGING YOU IN</h1>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default slackCallback;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/callbacks/zoomCallback.js",["142","143","144"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nclass zoomCallback extends Component {\n  state = {\n    tokendata: {},\n    userdata: {},\n  };\n\n  authenticate() {\n    const value = queryString.parse(this.props.location.search);\n    if (value.code) {\n      // replace with server URI\n      axios\n        .get(\"http://localhost:3000\" + \"/zoom/auth\", {\n          headers: {\n            authData: value.code.toString(),\n          },\n        })\n        .then((res) => {\n          this.setState({ tokendata: res });\n          localStorage.setItem(\n            \"ZoomAccessToken\",\n            this.state.tokendata.data.access_token\n          );\n          console.log(\n            \"LOCAL_Callback\",\n            localStorage.getItem(\"ZoomAccessToken\")\n          );\n          axios\n            .get(\"http://localhost:3000\" + \"/zoom/user\", {\n              headers: {\n                atoken: this.state.tokendata.data.access_token,\n              },\n            })\n            .then((result) => {\n              this.setState({ userdata: result.data });\n              // console.log(result.data);\n              var url = process.env.REACT_APP_redirectURL + \"/\";\n              window.location = url;\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      console.log(\"fiss\");\n    }\n  }\n\n  componentDidMount() {\n    this.authenticate();\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {this.state.userdata.first_name ? (\n          <div>\n            {/* <div>\n              <div>\n                <div>\n                  <h1>Hello</h1>\n                  <h2>\n                    {this.state.userdata.first_name.toString()}{\" \"}\n                    {this.state.userdata.last_name.toString()}\n                  </h2>\n                </div>\n              </div>\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  aboutProps: {\n                    userdata: this.state.userdata,\n                    tokendata: this.state.tokendata,\n                  },\n                }}\n                className=\"btn btn-primary\"\n              >\n                Go to chat\n              </Link>\n            </div> */}\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default zoomCallback;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/auth/slackLogin.js",["145"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { config } from \"../config/slackConfig\";\n\nclass slackLogin extends Component {\n  state = {\n    tokendata: {},\n    userdata: {},\n  };\n\n  authenticate() {\n    console.log(\"Hi\");\n    var url =\n      \"https://slack.com/oauth/v2/authorize?scope=\" +\n      config.scopes +\n      \"&client_id=\" +\n      config.clientId +\n      \"&granular_bot_scope=0\";\n    window.location = url;\n  }\n\n  checkLoginStatus = () => {\n    const userid = localStorage.getItem(\"SlackUserID\");\n\n    axios\n      .get(\"http://localhost:3000\" + \"/slack/me\", {\n        headers: {\n          atoken: this.state.tokendata,\n          uid: userid,\n        },\n      })\n      .then((result) => {\n        this.setState({ userdata: result.data.user });\n        console.log(result.data.user);\n        var url = process.env.REACT_APP_redirectURL + \"/\";\n        window.location = url;\n      })\n      .catch((error) => {\n        console.log(error);\n        this.authenticate();\n      });\n  };\n\n  componentDidMount() {\n    const tokens = localStorage.getItem(\"SlackAccessToken\");\n    // console.log(\"Tokens\", tokens);\n    // console.log(\"LOCAL_Login\",localStorage.getItem('ZoomAccessToken'));\n    if (tokens != null) {\n      this.setState({ tokendata: tokens });\n      this.checkLoginStatus();\n    } else {\n      //message: \"Invalid access token.\"\n      this.authenticate();\n    }\n    this.authenticate();\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {this.state.userdata.real_name ? (\n          <div>\n            <div class=\"container\">\n              <div>\n                <div>\n                  <h1>Hello</h1>\n                  <h2>{this.state.userdata.real_name.toString()}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1>LOGGING YOU IN</h1>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default slackLogin;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/chat/chatScreen.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { Component } from \"react\";\nimport NavBar from \"../NavBar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport UserList from \"../UserList\";\nimport ChatBox from \"../ChatBox\";\nimport AddUser from \"../AddUser\";\nimport ErrorModal from \"../ErrorModal\";\nimport LoadingModal from \"../LoadingModal\";\nimport \"react-chat-elements/dist/main.css\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport axios from \"axios\";\n\nclass chatScreen extends Component {\n  state = {\n    signInModalShow: false,\n    userChatData: {}, // this contains users from which signed-in user can chat and its message data.\n    user: {}, // Signed-In User\n    slackuser: {},\n    zoomtokenData: {},\n    slacktokenData: {},\n    zoomMessages: [],\n    slackMessages: [],\n    selectedUserIndex: null,\n    showChatBox: false, // For small devices only\n    showChatList: true, // For small devices only\n    showUserOptions: false,\n    error: false,\n    errorMessage: \"\",\n    platformFlag: true, // true = zoom, false = slack\n    currSlackUID: \"\", // User ID\n    currSlackCID: \"\", // Channel ID\n    zoomStatus: true,\n    slackStatus: true,\n    targetUserStatus: true,\n  };\n\n  fetchContacts() {\n    axios\n      .get(\"http://localhost:3000\" + \"/addressbook/contacts\", {})\n      .then((result) => {\n        this.setState({ userChatData: result.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  checkZoomLoginStatus = () => {\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/user\", {\n        headers: {\n          atoken: this.state.zoomtokenData,\n        },\n      })\n      .then((result) => {\n        if (result.data.code == 124) {\n          console.log(\"error\");\n          localStorage.clear();\n          var url = process.env.REACT_APP_redirectURL + \"/\";\n          window.location = url;\n        } else {\n          this.setState({ user: result.data });\n          // this.setState({ user: this.props.location.aboutProps.userdata });\n          this.fetchContacts();\n        }\n        // console.log(result.data);\n        // code: 124, message: \"Invalid access token.\"\n      })\n      .catch((error) => {\n        console.log(error);\n        localStorage.clear();\n        var url = process.env.REACT_APP_redirectURL + \"/zoomAuth\";\n        window.location = url;\n      });\n  };\n\n  checkSlackLoginStatus = () => {\n    let usrid = localStorage.getItem(\"SlackUserID\");\n    axios\n      .get(\"http://localhost:3000\" + \"/slack/me\", {\n        headers: {\n          atoken: this.state.slacktokenData,\n          uid: usrid,\n        },\n      })\n      .then((result) => {\n        if (result.data.ok == \"false\") {\n          console.log(\"error\");\n          localStorage.clear();\n          var url = process.env.REACT_APP_redirectURL + \"/slackAuth\";\n          window.location = url;\n        } else {\n          this.setState({ slackuser: result.data });\n          // this.setState({ user: this.props.location.aboutProps.userdata });\n          this.fetchContacts();\n        }\n        // console.log(result.data);\n        // code: 124, message: \"Invalid access token.\"\n      })\n      .catch((error) => {\n        console.log(error);\n        localStorage.clear();\n        var url = process.env.REACT_APP_redirectURL + \"/\";\n        window.location = url;\n      });\n  };\n\n  componentDidMount() {\n    const zoomTokens = localStorage.getItem(\"ZoomAccessToken\");\n    const slackTokens = localStorage.getItem(\"SlackAccessToken\");\n    if (zoomTokens != null && slackTokens != null) {\n      this.setState(\n        { zoomtokenData: zoomTokens, slacktokenData: slackTokens },\n        () => {\n          this.checkZoomLoginStatus();\n          this.checkSlackLoginStatus();\n        }\n      );\n    } else {\n      localStorage.clear();\n      var url = process.env.REACT_APP_redirectURL + \"/\";\n      window.location = url;\n    }\n  }\n\n  myMsgs(msg) {\n    if (msg.sender == this.sender) {\n      msg.position = \"right\";\n    } else {\n      msg.position = \"left\";\n    }\n    msg.type = \"text\";\n    msg.date = msg.timestamp;\n    msg.text = msg.message;\n    return msg;\n  }\n\n  myMsgsSlack(msg) {\n    if (msg.user == this.receiver) {\n      msg.position = \"left\";\n    } else {\n      msg.position = \"right\";\n    }\n    msg.type = \"text\";\n    msg.date = parseInt(msg.ts) * 1000;\n    msg.text = msg.text;\n    return msg;\n  }\n\n  getMessagesZoom = () => {\n    axios\n      .get(\"http://localhost:3000\" + \"/zoom/messages\", {\n        headers: {\n          atoken: this.state.zoomtokenData,\n          id: this.state.user.id,\n          to: this.state.selectedUserIndex.user.zoom.email,\n          dt: \"2021-03-18\",\n        },\n      })\n      .then((result) => {\n        var sender = this.state.user.email;\n        var msgs = result.data.messages.map(this.myMsgs, {\n          sender: sender,\n        });\n        msgs = msgs.reverse();\n        this.setState({ zoomMessages: msgs });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  getSlackTargetDetails() {\n    axios\n      .get(\"http://localhost:3000\" + \"/slack/user\", {\n        headers: {\n          atoken: this.state.slacktokenData,\n          mailid: this.state.selectedUserIndex.user.slack.email,\n        },\n      })\n      .then((result) => {\n        this.setState({ currSlackUID: result.data.user.id }, () => {\n          // console.log(this.state.currSlackUID);\n          axios\n            .get(\"http://localhost:3000\" + \"/slack/openconversation\", {\n              headers: {\n                atoken: this.state.slacktokenData,\n                userid: this.state.currSlackUID,\n              },\n            })\n            .then((res) => {\n              // console.log(res);\n              this.setState({ currSlackCID: res.data.channel.id }, () => {});\n            })\n            .catch((error) => {\n              console.log(error);\n              // this.authenticate();\n            });\n        });\n        // console.log(result.data.user);\n      })\n      .catch((error) => {\n        console.log(error);\n        // this.authenticate();\n      });\n  }\n\n  getMessagesSlack = () => {\n    axios\n      .get(\"http://localhost:3000\" + \"/slack/messages\", {\n        headers: {\n          atoken: this.state.slacktokenData,\n          cid: this.state.currSlackCID,\n        },\n      })\n      .then((result) => {\n        // console.log(result);\n        var receiver = this.state.currSlackUID;\n        var msgs = result.data.messages.map(this.myMsgsSlack, {\n          receiver: receiver,\n        });\n        msgs = msgs.reverse();\n        this.setState({ slackMessages: msgs });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  getMessagesIntervalZoom = () => {\n    if (\n      !this.state.platformFlag ||\n      this.state.selectedUserIndex.user.zoom.email === \"na\"\n    )\n      return;\n    const interval = setInterval(() => {\n      if (!this.state.platformFlag) return;\n      this.getMessagesZoom();\n    }, 4000);\n  };\n  getMessagesIntervalSlack = () => {\n    if (\n      this.state.platformFlag ||\n      this.state.selectedUserIndex.user.slack.email === \"na\"\n    )\n      return;\n    var uid;\n    this.getSlackTargetDetails();\n\n    const interval = setInterval(() => {\n      if (this.state.platformFlag) return;\n      this.getMessagesSlack();\n    }, 4000);\n  };\n  checkUserStatusInterval = () => {\n    const interval = setInterval(() => {\n      this.checkUserStatus();\n    }, 5000);\n  };\n  checkUserStatus = () => {\n    if (this.state.selectedUserIndex.user.zoom.email !== \"na\") {\n      axios\n        .get(\"http://localhost:3000\" + \"/zoom/status\", {\n          headers: {\n            atoken: this.state.zoomtokenData,\n            uid: this.state.selectedUserIndex.user.zoom.email,\n          },\n        })\n        .then((result) => {\n          console.log(\"ZOOM\", result.data);\n          console.log(\"ZOOMStatus\", result.data.presence_status);\n\n          if (result.data.presence_status == \"Available\")\n            this.setState({ zoomStatus: true });\n          else this.setState({ zoomStatus: false });\n\n          if (this.state.zoomStatus && this.state.slackStatus) {\n            this.setState({ targetUserStatus: true });\n          } else {\n            this.setState({ targetUserStatus: false });\n          }\n          console.log(this.state.targetUserStatus);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    if (this.state.selectedUserIndex.user.slack.email !== \"na\") {\n      axios\n        .get(\"http://localhost:3000\" + \"/slack/user\", {\n          headers: {\n            atoken: this.state.slacktokenData,\n            mailid: this.state.selectedUserIndex.user.slack.email,\n          },\n        })\n        .then((result) => {\n          this.setState({ currSlackUID: result.data.user.id }, () => {\n            axios\n              .get(\"http://localhost:3000\" + \"/slack/status\", {\n                headers: {\n                  atoken: this.state.slacktokenData,\n                  uid: this.state.currSlackUID,\n                },\n              })\n              .then((result) => {\n                console.log(\"Slack\", result.data.presence);\n                if (result.data.presence == \"active\")\n                  this.setState({ slackStatus: true });\n                else this.setState({ slackStatus: false });\n                if (this.state.zoomStatus && this.state.slackStatus) {\n                  this.setState({ targetUserStatus: true });\n                } else {\n                  this.setState({ targetUserStatus: false });\n                }\n                console.log(this.state.targetUserStatus);\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  onChatClicked(e) {\n    this.toggleViews();\n    let users = this.state.userChatData.Items;\n    this.setState(\n      {\n        selectedUserIndex: e,\n        showUserOptions: false,\n        platformFlag: true,\n        zoomMessages: [],\n        slackMessages: [],\n        zoomStatus: true,\n        slackStatus: true,\n        targetUserStatus: true,\n        currSlackUID: \"\",\n        currSlackCID: \"\",\n      },\n      () => {\n        this.checkUserStatusInterval();\n        this.getMessagesIntervalZoom();\n        this.getMessagesIntervalSlack();\n      }\n    );\n    return;\n  }\n\n  sendZoomMessage(message) {\n    // console.log(\"To\", message.to);\n    var data = {\n      message: message.text,\n      to: message.to,\n    };\n    axios\n      .post(\"http://localhost:3000\" + \"/zoom/sendmessage\", data, {\n        headers: {\n          atoken: this.state.zoomtokenData,\n          id: this.state.user.id,\n        },\n      })\n      .then((result) => {\n        // console.log(\"Send\", result);\n        this.getMessagesZoom();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  sendSlackMessage(message) {\n    // console.log(\"To\", message.to);\n    var data = {\n      message: message.text,\n      to: message.to,\n    };\n    axios\n      .post(\"http://localhost:3000\" + \"/slack/sendmessage\", data, {\n        headers: {\n          atoken: this.state.slacktokenData,\n        },\n      })\n      .then((result) => {\n        // console.log(\"Send\", result);\n        this.getMessagesSlack();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  createMessage(text) {\n    let message = {\n      type: \"text\",\n      text: text,\n      date: +new Date(),\n      className: \"message\",\n      position: \"right\",\n      to: this.state.platformFlag\n        ? this.state.selectedUserIndex.user.zoom.email\n        : this.state.currSlackUID,\n    };\n    this.state.platformFlag\n      ? this.sendZoomMessage(message)\n      : this.sendSlackMessage(message);\n  }\n\n  toggleViews() {\n    this.setState({\n      showChatBox: !this.state.showChatBox,\n      showChatList: !this.state.showChatList,\n    });\n  }\n\n  toggleUserOptionView() {\n    this.setState({\n      showUserOptions: !this.state.showUserOptions,\n    });\n  }\n\n  togglePlatforms() {\n    this.setState(\n      {\n        platformFlag: !this.state.platformFlag,\n      },\n      () => {\n        if (this.state.platformFlag) {\n          this.getMessagesIntervalZoom();\n        } else {\n          this.getMessagesIntervalSlack();\n        }\n      }\n    );\n  }\n\n  render() {\n    console.log(this.state.zoomtokenData);\n    let chatBoxProps = this.state.showChatBox\n      ? {\n          xs: 12,\n          sm: 12,\n        }\n      : {\n          xsHidden: true,\n          // smHidden: true,\n        };\n\n    let chatListProps = this.state.showChatList\n      ? {\n          xs: 12,\n          sm: 12,\n        }\n      : {\n          xsHidden: true,\n          // smHidden: true,\n        };\n    return (\n      <div>\n        {this.state.userChatData.Items ? (\n          <div>\n            <NavBar signedInUser={this.state.user} />\n            <Container>\n              <Row>\n                <Col {...chatListProps} md={4}>\n                  <UserList\n                    userData={this.state.userChatData.Items}\n                    onChatClicked={this.onChatClicked.bind(this)}\n                    toggleUserOptionView={this.toggleUserOptionView.bind(this)}\n                  />\n                </Col>\n                <Col {...chatBoxProps} md={8}>\n                  {this.state.showUserOptions ? (\n                    <AddUser\n                      onBackPressed={this.toggleUserOptionView.bind(this)}\n                      refreshOnAdd={this.fetchContacts.bind(this)}\n                    />\n                  ) : (\n                    <>\n                      {this.state.platformFlag ? (\n                        <ChatBox\n                          signedInUser={this.state.user}\n                          messages={this.state.zoomMessages}\n                          onSendClicked={this.createMessage.bind(this)}\n                          onBackPressed={this.toggleViews.bind(this)}\n                          onSwitch={this.togglePlatforms.bind(this)}\n                          targetUser={this.state.selectedUserIndex}\n                          targetStatus={this.state.targetUserStatus}\n                          platform=\"zoom\"\n                        />\n                      ) : (\n                        <ChatBox\n                          signedInUser={this.state.slackuser}\n                          messages={this.state.slackMessages}\n                          onSendClicked={this.createMessage.bind(this)}\n                          onBackPressed={this.toggleViews.bind(this)}\n                          onSwitch={this.togglePlatforms.bind(this)}\n                          targetUser={this.state.selectedUserIndex}\n                          targetStatus={this.state.targetUserStatus}\n                          platform=\"slack\"\n                        />\n                      )}\n                    </>\n                  )}\n                </Col>\n              </Row>\n            </Container>\n            <ErrorModal\n              show={this.state.error}\n              errorMessage={this.state.errorMessage}\n            />\n            <LoadingModal show={this.state.loading} />\n            <NotificationContainer />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default chatScreen;\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/index.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/config/teamsConfig.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/config/slackConfig.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/apis/teams/ErrorMessage.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/NavBar.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/apis/teams/MSUtils.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/UserList.js",["171"],"import React, { Component } from \"react\";\nimport { ChatList } from \"react-chat-elements\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\n\n/**\n *\n * Renders user list\n *\n * Used on both places Sign-in modal and as ChatList\n */\n\nexport default class UserList extends Component {\n  state = {\n    userData: [],\n    searchQuery: null,\n  };\n  componentDidMount() {}\n  searchInput(e) {\n    let value = e.target.value;\n    let searchQuery = null;\n    if (value) {\n      searchQuery = value;\n    }\n    this.setState({ searchQuery });\n  }\n  /**\n   *\n   * Implement filter logic on basis of search query.\n   */\n  getFilteredUserList() {\n    return !this.state.searchQuery\n      ? this.props.userData\n      : this.props.userData.filter((user) =>\n          user.first_name\n            .toLowerCase()\n            .includes(this.state.searchQuery.toLowerCase())\n        );\n  }\n\n  toggleViews() {\n    this.props.toggleUserOptionView();\n  }\n\n  render() {\n    let users = this.props.userData;\n    // console.log(\"LIST\", this.props.userData);\n    return (\n      <div>\n        <FormGroup>\n          {/* <FormControl\n            type=\"text\"\n            placeholder=\"Search for a user here...\"\n            onInput={this.searchInput.bind(this)}\n          /> */}\n        </FormGroup>\n        <Button\n          variant=\"primary\"\n          size=\"lg\"\n          block\n          active\n          className=\"addButton\"\n          style={{marginBottom:'15px'}}\n          onClick={this.toggleViews.bind(this)}\n        >\n          Add New User\n        </Button>\n        {users.length ? (\n          <ChatList\n            className={!this.props.showSignInList ? \"chat-list\" : \"user-list\"}\n            dataSource={users.map((f, i) => {\n              let date = null;\n              // if (\n              //   !this.props.showSignInList &&\n              //   f.messages &&\n              //   f.messages.length\n              // ) {\n              //   let lastMessage = f.messages[f.messages.length - 1];\n              //   date = new Date(lastMessage.timeStamp);\n              //   subtitle =\n              //     (lastMessage.position === \"right\" ? \"You: \" : f.name + \": \") +\n              //     lastMessage.text;\n              // }\n              return {\n                avatar:\n                  \"https://houstontamilchair.org/wp-content/uploads/2020/07/parent-directory-avatar-2png-avatar-png-256_256.png\",\n                alt: f.first_name[0],\n                title: f.first_name + \" \" + f.last_name,\n                date: date,\n                // unread: f.unread,\n                user: f,\n              };\n            })}\n            onClick={\n              !this.props.showSignInList\n                ? this.props.onChatClicked\n                : this.props.onUserClicked\n            }\n          />\n        ) : (\n          <div className=\"text-center no-users\">No users to show.</div>\n        )}\n      </div>\n    );\n  }\n}\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ErrorModal.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/LoadingModal.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/ChatBox.js",["172","173"],"import React, { Component } from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n// import Col from \"react-bootstrap/lib/Col\";\nimport Loader from \"react-loader-spinner\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport {\n  MessageList,\n  Navbar as NavbarComponent,\n  Avatar,\n} from \"react-chat-elements\";\nimport axios from \"axios\";\n\nexport default class ChatBox extends Component {\n  state = {\n    messageText: \"\",\n    messages: {},\n    tokenData: {},\n  };\n\n  onSendClicked() {\n    if (!this.state.messageText) {\n      return;\n    }\n    this.props.onSendClicked(this.state.messageText);\n    this.setState({ messageText: \"\" });\n  }\n  onMessageInputChange(e) {\n    this.setState({ messageText: e.target.value });\n  }\n  /**\n   *\n   * @param {KeyboardEvent} e\n   *\n   * listen for enter pressed and sends the message.\n   */\n  onMessageKeyPress(e) {\n    if (e.key === \"Enter\") {\n      this.onSendClicked();\n    }\n  }\n\n  render() {\n    // console.log(\"Target\", this.props.messages.length);\n    return (\n      <div>\n        {this.props.targetUser ? (\n          <div>\n            <NavbarComponent\n              left={\n                <div>\n                  <Avatar\n                    src={`https://houstontamilchair.org/wp-content/uploads/2020/07/parent-directory-avatar-2png-avatar-png-256_256.png`}\n                    alt={\"image\"}\n                    size=\"large\"\n                    type=\"circle flexible\"\n                  />\n                  <p className=\"navBarText\">\n                    {this.props.targetUser.user.first_name +\n                      \" \" +\n                      this.props.targetUser.user.last_name}\n                  </p>\n                </div>\n              }\n              center={\n                <div>\n                  <p className=\"navBarText\">\n                    <span> Platform : {this.props.platform}</span>\n                    {this.props.targetStatus?(<span>- Sync Status : Active</span>):(<span>- Sync Status : Inactive</span>)}\n                  </p>\n                </div>\n              }\n              right={\n                <div>\n                  <Button\n                    onClick={this.props.onSwitch}\n                  >\n                    Switch Platform\n                  </Button>\n                </div>\n              }\n            />\n            {(this.props.platform === \"slack\" &&\n              this.props.targetUser.user.slack.email === \"na\") ||\n            (this.props.platform === \"zoom\" &&\n              this.props.targetUser.user.zoom.email === \"na\") ? (\n              <div style={{marginTop:'10px'}}>\n                <h3>User not available on this platform.</h3>\n              </div>\n            ) : (\n              <>\n                {this.props.messages.length == 0 ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: \"100vh\",\n                    }}\n                  >\n                    <Loader\n                      type=\"TailSpin\"\n                      color=\"#00BFFF\"\n                      height={100}\n                      width={100}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    <MessageList\n                      className=\"message-list\"\n                      lockable={true}\n                      toBottomHeight={\"100%\"}\n                      dataSource={this.props.messages}\n                    />\n                    <FormGroup>\n                      <InputGroup>\n                        <FormControl\n                          type=\"text\"\n                          value={this.state.messageText}\n                          onChange={this.onMessageInputChange.bind(this)}\n                          onKeyPress={this.onMessageKeyPress.bind(this)}\n                          placeholder=\"Type a message here (Limit 3000 characters)...\"\n                          ref=\"messageTextBox\"\n                          className=\"messageTextBox\"\n                          maxLength=\"3000\"\n                          autoFocus\n                        />\n                        <Button>\n                          <Button\n                            disabled={!this.state.messageText}\n                            className=\"sendButton\"\n                            onClick={this.onSendClicked.bind(this)}\n                          >\n                            Send\n                          </Button>\n                        </Button>\n                      </InputGroup>\n                    </FormGroup>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        ) : (\n          <div>\n            <Jumbotron>\n              <h1>Hello, {(this.props.signedInUser || {}).first_name}!</h1>\n              <p>Select a contact to start a chat.</p>\n            </Jumbotron>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/AddUser.js",["174","175"],"import React, { Component } from \"react\";\nimport \"./AddUser.css\";\n// import Button from \"react-bootstrap/Button\";\nimport {\n  Navbar as NavbarComponent,\n} from \"react-chat-elements\";\nimport axios from \"axios\";\n\n/**\n *\n * AddUser Component\n *\n * To add a user to the addressbook\n * \n */\n\nexport default class AddUser extends Component {\n  state = {\n    userid: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    zoom : {\n        email : \"\"\n    },\n    slack : {\n      email : \"\"\n    }\n  };\n \n  inputCheck = (e) => {\n    let filter = e.target.getAttribute('filter')   \n    e.target.value = e.target.value.replace(new RegExp(filter, 'g'), '')   \n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  submitCheck = () => {\n    if(!this.state.first_name || !this.state.last_name){\n      alert(\"A name field is empty.\");\n      return;\n    } else if(!this.state.userid){\n        alert(\"Userid cannot be empty.\");\n        return;\n    }\n    //add user here\n    // console.log(this.state);\n    axios\n      .post(\"http://localhost:3000\" + \"/addressbook/add\", {\n        userid : this.state.userid,\n        firstname : this.state.first_name,\n        lastname : this.state.last_name,\n        zoom : {\n            email : this.state.zoom.email\n        },\n        slack : {\n          email : this.state.slack.email\n        }\n      })\n      .then((result) => {\n          console.log(result);\n          if(result.status == 200) {\n            console.log(\"working1\");\n            this.props.refreshOnAdd();\n            alert(\"User added successfully.\");\n          }\n          else alert(\"User not added\");\n          this.resetForm();\n      })\n      .catch((error) => {\n        alert(\"User not added.\");\n        this.resetForm();\n      });\n }\n\n toggleViews(){\n     this.props.onBackPressed();\n }\n\n resetForm = () => {\n    this.setState({\n        userid: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        zoom : {\n            email : \"\"\n        },\n        slack : {\n          email : \"\"\n        }\n    })    \n  }\n\n  render() {\n    // console.log(\"Target\",this.props.targetUser);\n    return (\n      <div>\n          <NavbarComponent\n              left={\n                <div>\n                  <p className=\"navBarText\">\n                    ADD A NEW USER\n                  </p>\n                </div>\n              }\n            />\n            <div className=\"addUserBody\">\n            <div className=\"userForm\">\n                <div className=\"header\">\n                <p>Fill in the below details :</p>\n            </div>\n          <div className=\"inputcontainer\">\n            <input className=\"userInput\" filter=\"[^a-zA-Z ]\" name=\"first_name\" placeholder=\"First Name\" onChange={this.inputCheck} value={this.state.first_name} />\n            <input className=\"userInput\" filter=\"[^a-zA-Z ]\" name=\"last_name\" placeholder=\"Last Name\" onChange={this.inputCheck} value={this.state.last_name} />\n            <input className=\"userInput\" name=\"userid\" placeholder=\"Userid\" onChange={this.inputCheck} value={this.state.userid} />\n            <input className=\"userInput\" placeholder=\"Zoom Email Address / na\" onChange={(e) => {this.setState({zoom:{email: e.target.value}})}} value={this.state.zoom.email}/>\n            <input className=\"userInput\" placeholder=\"Slack Email Address / na\" onChange={(e) => {this.setState({slack:{email: e.target.value}})}} value={this.state.slack.email}/>\n            <button className=\"userButton\" onClick={this.submitCheck}>Submit</button>\n            <button className=\"userButton\" onClick={this.resetForm}>Reset</button>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/redux/reducers/contacts.js",[],"/home/niraj/NICE/unified-UCAAS-platform-NICE_InContact/frontend/src/components/apis/teams/GraphService.js",[],["176","177"],{"ruleId":"178","severity":1,"message":"179","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":18},{"ruleId":"178","severity":1,"message":"182","line":8,"column":8,"nodeType":"180","messageId":"181","endLine":8,"endColumn":13},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"178","severity":1,"message":"187","line":8,"column":35,"nodeType":"180","messageId":"181","endLine":8,"endColumn":41},{"ruleId":"178","severity":1,"message":"188","line":8,"column":50,"nodeType":"180","messageId":"181","endLine":8,"endColumn":54},{"ruleId":"178","severity":1,"message":"189","line":9,"column":8,"nodeType":"180","messageId":"181","endLine":9,"endColumn":18},{"ruleId":"178","severity":1,"message":"188","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":24,"column":36,"nodeType":"192","messageId":"193","endLine":24,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":30,"column":30,"nodeType":"192","messageId":"196","endLine":30,"endColumn":32},{"ruleId":"178","severity":1,"message":"197","line":2,"column":53,"nodeType":"180","messageId":"181","endLine":2,"endColumn":66},{"ruleId":"178","severity":1,"message":"198","line":5,"column":3,"nodeType":"180","messageId":"181","endLine":5,"endColumn":11},{"ruleId":"178","severity":1,"message":"199","line":7,"column":3,"nodeType":"180","messageId":"181","endLine":7,"endColumn":9},{"ruleId":"178","severity":1,"message":"200","line":8,"column":3,"nodeType":"180","messageId":"181","endLine":8,"endColumn":16},{"ruleId":"178","severity":1,"message":"201","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":14},{"ruleId":"178","severity":1,"message":"202","line":10,"column":3,"nodeType":"180","messageId":"181","endLine":10,"endColumn":6},{"ruleId":"178","severity":1,"message":"203","line":11,"column":3,"nodeType":"180","messageId":"181","endLine":11,"endColumn":10},{"ruleId":"178","severity":1,"message":"204","line":12,"column":3,"nodeType":"180","messageId":"181","endLine":12,"endColumn":23},{"ruleId":"178","severity":1,"message":"205","line":13,"column":3,"nodeType":"180","messageId":"181","endLine":13,"endColumn":17},{"ruleId":"178","severity":1,"message":"206","line":14,"column":3,"nodeType":"180","messageId":"181","endLine":14,"endColumn":15},{"ruleId":"178","severity":1,"message":"207","line":15,"column":3,"nodeType":"180","messageId":"181","endLine":15,"endColumn":15},{"ruleId":"178","severity":1,"message":"188","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":16,"column":36,"nodeType":"192","messageId":"193","endLine":16,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":22,"column":30,"nodeType":"192","messageId":"196","endLine":22,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":38,"column":36,"nodeType":"192","messageId":"193","endLine":38,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":45,"column":28,"nodeType":"192","messageId":"196","endLine":45,"endColumn":30},{"ruleId":"178","severity":1,"message":"188","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"208","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":19,"column":38,"nodeType":"192","messageId":"193","endLine":19,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":38,"column":42,"nodeType":"192","messageId":"193","endLine":38,"endColumn":43},{"ruleId":"178","severity":1,"message":"188","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":18,"column":38,"nodeType":"192","messageId":"193","endLine":18,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":34,"column":42,"nodeType":"192","messageId":"193","endLine":34,"endColumn":43},{"ruleId":"190","severity":1,"message":"191","line":26,"column":36,"nodeType":"192","messageId":"193","endLine":26,"endColumn":37},{"ruleId":"178","severity":1,"message":"209","line":15,"column":3,"nodeType":"180","messageId":"181","endLine":15,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":46,"column":36,"nodeType":"192","messageId":"193","endLine":46,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":57,"column":36,"nodeType":"192","messageId":"193","endLine":57,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":63,"column":30,"nodeType":"192","messageId":"196","endLine":63,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":87,"column":36,"nodeType":"192","messageId":"193","endLine":87,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":94,"column":28,"nodeType":"192","messageId":"196","endLine":94,"endColumn":30},{"ruleId":"194","severity":1,"message":"195","line":134,"column":20,"nodeType":"192","messageId":"196","endLine":134,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":146,"column":18,"nodeType":"192","messageId":"196","endLine":146,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":153,"column":16,"nodeType":"212","messageId":"213","endLine":153,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":159,"column":36,"nodeType":"192","messageId":"193","endLine":159,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":182,"column":36,"nodeType":"192","messageId":"193","endLine":182,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":192,"column":42,"nodeType":"192","messageId":"193","endLine":192,"endColumn":43},{"ruleId":"190","severity":1,"message":"191","line":217,"column":36,"nodeType":"192","messageId":"193","endLine":217,"endColumn":37},{"ruleId":"178","severity":1,"message":"214","line":242,"column":11,"nodeType":"180","messageId":"181","endLine":242,"endColumn":19},{"ruleId":"178","severity":1,"message":"215","line":253,"column":9,"nodeType":"180","messageId":"181","endLine":253,"endColumn":12},{"ruleId":"178","severity":1,"message":"214","line":256,"column":11,"nodeType":"180","messageId":"181","endLine":256,"endColumn":19},{"ruleId":"178","severity":1,"message":"214","line":262,"column":11,"nodeType":"180","messageId":"181","endLine":262,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":269,"column":38,"nodeType":"192","messageId":"193","endLine":269,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":279,"column":43,"nodeType":"192","messageId":"196","endLine":279,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":296,"column":38,"nodeType":"192","messageId":"193","endLine":296,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":305,"column":44,"nodeType":"192","messageId":"193","endLine":305,"endColumn":45},{"ruleId":"194","severity":1,"message":"195","line":313,"column":42,"nodeType":"192","messageId":"196","endLine":313,"endColumn":44},{"ruleId":"178","severity":1,"message":"216","line":336,"column":9,"nodeType":"180","messageId":"181","endLine":336,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":366,"column":37,"nodeType":"192","messageId":"193","endLine":366,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":388,"column":37,"nodeType":"192","messageId":"193","endLine":388,"endColumn":38},{"ruleId":"178","severity":1,"message":"217","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":19},{"ruleId":"178","severity":1,"message":"218","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":94,"column":45,"nodeType":"192","messageId":"196","endLine":94,"endColumn":47},{"ruleId":"190","severity":1,"message":"191","line":47,"column":37,"nodeType":"192","messageId":"193","endLine":47,"endColumn":38},{"ruleId":"194","severity":1,"message":"195","line":60,"column":28,"nodeType":"192","messageId":"196","endLine":60,"endColumn":30},{"ruleId":"183","replacedBy":"219"},{"ruleId":"185","replacedBy":"220"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["221"],"no-negated-in-lhs",["222"],"'Switch' is defined but never used.","'Link' is defined but never used.","'teamsLogin' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'RouterNavLink' is defined but never used.","'Collapse' is defined but never used.","'Navbar' is defined but never used.","'NavbarToggler' is defined but never used.","'NavbarBrand' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'config' is defined but never used.","'NotificationManager' is defined but never used.","no-self-assign","'msg.text' is assigned to itself.","MemberExpression","selfAssignment","'interval' is assigned a value but never used.","'uid' is defined but never used.","'users' is assigned a value but never used.","'FormControl' is defined but never used.","'axios' is defined but never used.",["221"],["222"],"no-global-assign","no-unsafe-negation"]